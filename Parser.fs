// Implementation file for parser generated by fsyacc
module TinyML.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


open TinyML
open FSharp.Common.Parsing.LexYacc
open TinyML.Ast

let parse_error_rich = Some (fun ctx -> raise (ParseErrorContextException ctx))


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | IF
  | THEN
  | ELSE
  | FUN
  | ARROW
  | LET
  | REC
  | IN
  | TRUE
  | FALSE
  | BRA
  | KET
  | PLUS
  | MINUS
  | STAR
  | SLASH
  | PERCENT
  | LT
  | GT
  | LEQ
  | GEQ
  | EQ
  | NEQ
  | AND
  | OR
  | NOT
  | COLON
  | SEMICOLON2
  | COMMA
  | STRING of (System.String)
  | ID of (System.String)
  | CHAR of (System.Char)
  | FLOAT of (System.Double)
  | INT of (System.Int32)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_FUN
    | TOKEN_ARROW
    | TOKEN_LET
    | TOKEN_REC
    | TOKEN_IN
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_BRA
    | TOKEN_KET
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_SLASH
    | TOKEN_PERCENT
    | TOKEN_LT
    | TOKEN_GT
    | TOKEN_LEQ
    | TOKEN_GEQ
    | TOKEN_EQ
    | TOKEN_NEQ
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_COLON
    | TOKEN_SEMICOLON2
    | TOKEN_COMMA
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_CHAR
    | TOKEN_FLOAT
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startinteractive
    | NONTERM__startprogram
    | NONTERM_program
    | NONTERM_interactive
    | NONTERM_expr
    | NONTERM_binding
    | NONTERM_parms
    | NONTERM_expr_app_atom
    | NONTERM_expr_tuple_atom
    | NONTERM_expr_tuple_atoms
    | NONTERM_ty
    | NONTERM_ty_tuple

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | IF  -> 1 
  | THEN  -> 2 
  | ELSE  -> 3 
  | FUN  -> 4 
  | ARROW  -> 5 
  | LET  -> 6 
  | REC  -> 7 
  | IN  -> 8 
  | TRUE  -> 9 
  | FALSE  -> 10 
  | BRA  -> 11 
  | KET  -> 12 
  | PLUS  -> 13 
  | MINUS  -> 14 
  | STAR  -> 15 
  | SLASH  -> 16 
  | PERCENT  -> 17 
  | LT  -> 18 
  | GT  -> 19 
  | LEQ  -> 20 
  | GEQ  -> 21 
  | EQ  -> 22 
  | NEQ  -> 23 
  | AND  -> 24 
  | OR  -> 25 
  | NOT  -> 26 
  | COLON  -> 27 
  | SEMICOLON2  -> 28 
  | COMMA  -> 29 
  | STRING _ -> 30 
  | ID _ -> 31 
  | CHAR _ -> 32 
  | FLOAT _ -> 33 
  | INT _ -> 34 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_IF 
  | 2 -> TOKEN_THEN 
  | 3 -> TOKEN_ELSE 
  | 4 -> TOKEN_FUN 
  | 5 -> TOKEN_ARROW 
  | 6 -> TOKEN_LET 
  | 7 -> TOKEN_REC 
  | 8 -> TOKEN_IN 
  | 9 -> TOKEN_TRUE 
  | 10 -> TOKEN_FALSE 
  | 11 -> TOKEN_BRA 
  | 12 -> TOKEN_KET 
  | 13 -> TOKEN_PLUS 
  | 14 -> TOKEN_MINUS 
  | 15 -> TOKEN_STAR 
  | 16 -> TOKEN_SLASH 
  | 17 -> TOKEN_PERCENT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GT 
  | 20 -> TOKEN_LEQ 
  | 21 -> TOKEN_GEQ 
  | 22 -> TOKEN_EQ 
  | 23 -> TOKEN_NEQ 
  | 24 -> TOKEN_AND 
  | 25 -> TOKEN_OR 
  | 26 -> TOKEN_NOT 
  | 27 -> TOKEN_COLON 
  | 28 -> TOKEN_SEMICOLON2 
  | 29 -> TOKEN_COMMA 
  | 30 -> TOKEN_STRING 
  | 31 -> TOKEN_ID 
  | 32 -> TOKEN_CHAR 
  | 33 -> TOKEN_FLOAT 
  | 34 -> TOKEN_INT 
  | 37 -> TOKEN_end_of_input
  | 35 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startinteractive 
    | 1 -> NONTERM__startprogram 
    | 2 -> NONTERM_program 
    | 3 -> NONTERM_interactive 
    | 4 -> NONTERM_interactive 
    | 5 -> NONTERM_expr 
    | 6 -> NONTERM_expr 
    | 7 -> NONTERM_binding 
    | 8 -> NONTERM_binding 
    | 9 -> NONTERM_binding 
    | 10 -> NONTERM_binding 
    | 11 -> NONTERM_binding 
    | 12 -> NONTERM_binding 
    | 13 -> NONTERM_binding 
    | 14 -> NONTERM_binding 
    | 15 -> NONTERM_parms 
    | 16 -> NONTERM_parms 
    | 17 -> NONTERM_parms 
    | 18 -> NONTERM_parms 
    | 19 -> NONTERM_expr_app_atom 
    | 20 -> NONTERM_expr_app_atom 
    | 21 -> NONTERM_expr_app_atom 
    | 22 -> NONTERM_expr_app_atom 
    | 23 -> NONTERM_expr_app_atom 
    | 24 -> NONTERM_expr_app_atom 
    | 25 -> NONTERM_expr_app_atom 
    | 26 -> NONTERM_expr_app_atom 
    | 27 -> NONTERM_expr_app_atom 
    | 28 -> NONTERM_expr_tuple_atom 
    | 29 -> NONTERM_expr_tuple_atom 
    | 30 -> NONTERM_expr_tuple_atom 
    | 31 -> NONTERM_expr_tuple_atom 
    | 32 -> NONTERM_expr_tuple_atom 
    | 33 -> NONTERM_expr_tuple_atom 
    | 34 -> NONTERM_expr_tuple_atom 
    | 35 -> NONTERM_expr_tuple_atom 
    | 36 -> NONTERM_expr_tuple_atom 
    | 37 -> NONTERM_expr_tuple_atom 
    | 38 -> NONTERM_expr_tuple_atom 
    | 39 -> NONTERM_expr_tuple_atom 
    | 40 -> NONTERM_expr_tuple_atom 
    | 41 -> NONTERM_expr_tuple_atom 
    | 42 -> NONTERM_expr_tuple_atom 
    | 43 -> NONTERM_expr_tuple_atom 
    | 44 -> NONTERM_expr_tuple_atom 
    | 45 -> NONTERM_expr_tuple_atom 
    | 46 -> NONTERM_expr_tuple_atom 
    | 47 -> NONTERM_expr_tuple_atom 
    | 48 -> NONTERM_expr_tuple_atom 
    | 49 -> NONTERM_expr_tuple_atoms 
    | 50 -> NONTERM_expr_tuple_atoms 
    | 51 -> NONTERM_ty 
    | 52 -> NONTERM_ty 
    | 53 -> NONTERM_ty 
    | 54 -> NONTERM_ty 
    | 55 -> NONTERM_ty_tuple 
    | 56 -> NONTERM_ty_tuple 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 37 
let _fsyacc_tagOfErrorTerminal = 35

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | FUN  -> "FUN" 
  | ARROW  -> "ARROW" 
  | LET  -> "LET" 
  | REC  -> "REC" 
  | IN  -> "IN" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | BRA  -> "BRA" 
  | KET  -> "KET" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | SLASH  -> "SLASH" 
  | PERCENT  -> "PERCENT" 
  | LT  -> "LT" 
  | GT  -> "GT" 
  | LEQ  -> "LEQ" 
  | GEQ  -> "GEQ" 
  | EQ  -> "EQ" 
  | NEQ  -> "NEQ" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | COLON  -> "COLON" 
  | SEMICOLON2  -> "SEMICOLON2" 
  | COMMA  -> "COMMA" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | CHAR _ -> "CHAR" 
  | FLOAT _ -> "FLOAT" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | BRA  -> (null : System.Object) 
  | KET  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | PERCENT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LEQ  -> (null : System.Object) 
  | GEQ  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NEQ  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SEMICOLON2  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;0us;65535us;1us;65535us;2us;3us;1us;65535us;0us;1us;17us;65535us;0us;6us;2us;4us;12us;62us;17us;18us;20us;21us;24us;25us;28us;29us;32us;33us;35us;36us;39us;40us;43us;44us;59us;62us;84us;85us;87us;88us;104us;105us;106us;107us;108us;109us;33us;65535us;0us;8us;2us;86us;12us;86us;17us;86us;20us;86us;24us;86us;28us;86us;32us;86us;35us;86us;39us;86us;43us;86us;59us;86us;84us;86us;87us;86us;89us;86us;90us;86us;91us;86us;92us;86us;93us;86us;94us;86us;95us;86us;96us;86us;97us;86us;98us;86us;99us;86us;100us;86us;101us;86us;102us;86us;103us;86us;104us;86us;106us;86us;108us;86us;110us;86us;5us;65535us;16us;19us;31us;34us;45us;51us;50us;52us;82us;83us;51us;65535us;0us;64us;2us;64us;10us;81us;11us;81us;12us;64us;17us;64us;20us;64us;24us;64us;28us;64us;32us;64us;35us;64us;39us;64us;43us;64us;59us;64us;65us;81us;66us;81us;67us;81us;68us;81us;69us;81us;70us;81us;71us;81us;72us;81us;73us;81us;74us;81us;75us;81us;76us;81us;77us;81us;78us;81us;79us;81us;80us;81us;84us;64us;87us;64us;89us;64us;90us;64us;91us;64us;92us;64us;93us;64us;94us;64us;95us;64us;96us;64us;97us;64us;98us;64us;99us;64us;100us;64us;101us;64us;102us;64us;103us;64us;104us;64us;106us;64us;108us;64us;110us;64us;33us;65535us;0us;10us;2us;10us;12us;11us;17us;10us;20us;10us;24us;10us;28us;10us;32us;10us;35us;10us;39us;10us;43us;10us;59us;10us;84us;10us;87us;10us;89us;65us;90us;66us;91us;67us;92us;68us;93us;69us;94us;70us;95us;71us;96us;72us;97us;73us;98us;74us;99us;75us;100us;76us;101us;77us;102us;78us;103us;79us;104us;10us;106us;10us;108us;10us;110us;80us;2us;65535us;12us;13us;110us;111us;8us;65535us;22us;23us;26us;27us;37us;38us;41us;42us;48us;49us;116us;113us;119us;114us;121us;115us;8us;65535us;22us;117us;26us;117us;37us;117us;41us;117us;48us;117us;116us;117us;119us;117us;121us;118us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;2us;4us;6us;24us;58us;64us;116us;150us;153us;162us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;2us;1us;2us;1us;3us;1us;3us;2us;4us;31us;1us;4us;15us;5us;29us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;17us;5us;29us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;49us;50us;3us;6us;25us;27us;1us;6us;1us;6us;8us;7us;8us;9us;10us;11us;12us;13us;14us;4us;7us;8us;9us;10us;1us;7us;1us;7us;2us;8us;10us;1us;8us;1us;8us;1us;9us;4us;9us;52us;55us;56us;1us;9us;1us;9us;1us;10us;4us;10us;52us;55us;56us;1us;10us;1us;10us;4us;11us;12us;13us;14us;4us;11us;12us;13us;14us;1us;11us;1us;11us;2us;12us;13us;1us;12us;1us;12us;1us;13us;4us;13us;52us;55us;56us;1us;13us;1us;13us;1us;14us;4us;14us;52us;55us;56us;1us;14us;1us;14us;2us;15us;17us;2us;16us;18us;2us;16us;18us;2us;16us;18us;5us;16us;18us;52us;55us;56us;2us;16us;18us;1us;17us;1us;18us;1us;19us;1us;20us;1us;21us;1us;22us;1us;23us;1us;24us;2us;25us;27us;1us;25us;1us;26us;1us;27us;1us;27us;1us;28us;15us;29us;32us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;15us;29us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;15us;29us;34us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;15us;29us;34us;35us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;15us;29us;34us;35us;36us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;15us;29us;34us;35us;36us;37us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;15us;29us;34us;35us;36us;37us;38us;38us;39us;40us;41us;42us;43us;44us;45us;46us;15us;29us;34us;35us;36us;37us;38us;39us;39us;40us;41us;42us;43us;44us;45us;46us;15us;29us;34us;35us;36us;37us;38us;39us;40us;40us;41us;42us;43us;44us;45us;46us;15us;29us;34us;35us;36us;37us;38us;39us;40us;41us;41us;42us;43us;44us;45us;46us;15us;29us;34us;35us;36us;37us;38us;39us;40us;41us;42us;42us;43us;44us;45us;46us;15us;29us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;43us;44us;45us;46us;15us;29us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;44us;45us;46us;15us;29us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;45us;46us;15us;29us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;46us;16us;29us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;49us;50us;1us;29us;1us;30us;1us;30us;1us;30us;1us;30us;1us;31us;1us;31us;1us;31us;1us;32us;1us;33us;1us;34us;1us;35us;1us;36us;1us;37us;1us;38us;1us;39us;1us;40us;1us;41us;1us;42us;1us;43us;1us;44us;1us;45us;1us;46us;2us;47us;48us;2us;47us;48us;2us;47us;48us;2us;47us;48us;1us;48us;1us;48us;1us;50us;1us;50us;1us;51us;4us;52us;52us;55us;56us;4us;52us;54us;55us;56us;3us;52us;55us;56us;1us;52us;1us;53us;2us;53us;56us;1us;54us;1us;54us;1us;56us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;19us;21us;37us;55us;59us;61us;63us;72us;77us;79us;81us;84us;86us;88us;90us;95us;97us;99us;101us;106us;108us;110us;115us;120us;122us;124us;127us;129us;131us;133us;138us;140us;142us;144us;149us;151us;153us;156us;159us;162us;165us;171us;174us;176us;178us;180us;182us;184us;186us;188us;190us;193us;195us;197us;199us;201us;203us;219us;235us;251us;267us;283us;299us;315us;331us;347us;363us;379us;395us;411us;427us;443us;460us;462us;464us;466us;468us;470us;472us;474us;476us;478us;480us;482us;484us;486us;488us;490us;492us;494us;496us;498us;500us;502us;504us;506us;509us;512us;515us;518us;520us;522us;524us;526us;528us;533us;538us;542us;544us;546us;549us;551us;553us;|]
let _fsyacc_action_rows = 122
let _fsyacc_actionTableElements = [|13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;49152us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;49152us;1us;32768us;0us;5us;0us;16386us;1us;32768us;28us;7us;0us;16387us;2us;32768us;8us;87us;28us;9us;0us;16388us;21us;16389us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;22us;16389us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;29us;110us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;14us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;12us;60us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;1us;32768us;12us;14us;0us;16390us;2us;32768us;7us;30us;31us;16us;4us;32768us;11us;46us;22us;17us;27us;22us;31us;45us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16391us;2us;32768us;22us;20us;27us;26us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16392us;2us;32768us;11us;119us;31us;112us;3us;16439us;5us;116us;15us;121us;22us;24us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16393us;2us;32768us;11us;119us;31us;112us;3us;16439us;5us;116us;15us;121us;22us;28us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16394us;1us;32768us;31us;31us;4us;32768us;11us;46us;22us;32us;27us;41us;31us;45us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16395us;2us;32768us;22us;35us;27us;37us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16396us;2us;32768us;11us;119us;31us;112us;3us;16439us;5us;116us;15us;121us;22us;39us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16397us;2us;32768us;11us;119us;31us;112us;3us;16439us;5us;116us;15us;121us;22us;43us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16398us;2us;16399us;11us;46us;31us;45us;1us;32768us;31us;47us;1us;32768us;27us;48us;2us;32768us;11us;119us;31us;112us;3us;16439us;5us;116us;12us;50us;15us;121us;2us;16400us;11us;46us;31us;45us;0us;16401us;0us;16402us;0us;16403us;0us;16404us;0us;16405us;0us;16406us;0us;16407us;0us;16408us;14us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;12us;60us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16409us;0us;16410us;1us;32768us;12us;63us;0us;16411us;0us;16412us;9us;16416us;9us;57us;10us;58us;11us;59us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;9us;16417us;9us;57us;10us;58us;11us;59us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;11us;16418us;9us;57us;10us;58us;11us;59us;15us;93us;16us;94us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;11us;16419us;9us;57us;10us;58us;11us;59us;15us;93us;16us;94us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;9us;16420us;9us;57us;10us;58us;11us;59us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;9us;16421us;9us;57us;10us;58us;11us;59us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;21us;16422us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;16423us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;16424us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;16425us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;16426us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;16427us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;16428us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;19us;16429us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;20us;16430us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;22us;16433us;9us;57us;10us;58us;11us;59us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;29us;110us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16413us;2us;32768us;11us;46us;31us;45us;1us;32768us;5us;84us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16414us;1us;32768us;8us;87us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16415us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;1us;32768us;2us;106us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;1us;16431us;3us;108us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;12us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16432us;13us;32768us;1us;104us;4us;82us;6us;15us;9us;57us;10us;58us;11us;59us;14us;90us;26us;89us;30us;55us;31us;61us;32us;56us;33us;54us;34us;53us;0us;16434us;0us;16435us;2us;16436us;5us;116us;15us;121us;3us;16439us;5us;116us;12us;120us;15us;121us;2us;16439us;5us;116us;15us;121us;2us;32768us;11us;119us;31us;112us;0us;16437us;0us;16437us;2us;32768us;11us;119us;31us;112us;0us;16438us;2us;32768us;11us;119us;31us;112us;|]
let _fsyacc_actionTableRowOffsets = [|0us;14us;15us;29us;30us;32us;33us;35us;36us;39us;40us;62us;85us;100us;102us;103us;106us;111us;125us;126us;129us;143us;144us;147us;151us;165us;166us;169us;173us;187us;188us;190us;195us;209us;210us;213us;227us;228us;231us;235us;249us;250us;253us;257us;271us;272us;275us;277us;279us;282us;286us;289us;290us;291us;292us;293us;294us;295us;296us;297us;312us;313us;314us;316us;317us;318us;328us;338us;350us;362us;372us;382us;404us;418us;432us;446us;460us;474us;488us;508us;529us;552us;553us;556us;558us;572us;573us;575us;589us;590us;604us;618us;632us;646us;660us;674us;688us;702us;716us;730us;744us;758us;772us;786us;800us;814us;816us;830us;832us;846us;847us;861us;862us;863us;866us;870us;873us;876us;877us;878us;881us;882us;|]
let _fsyacc_reductionSymbolCounts = [|1us;1us;2us;2us;2us;1us;3us;4us;5us;6us;7us;5us;6us;8us;7us;1us;5us;2us;6us;1us;1us;1us;1us;1us;1us;2us;1us;3us;1us;2us;4us;3us;2us;2us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;4us;6us;1us;3us;1us;3us;1us;3us;1us;3us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;3us;3us;4us;4us;5us;5us;5us;5us;5us;5us;5us;5us;6us;6us;6us;6us;7us;7us;7us;7us;7us;7us;7us;7us;7us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;9us;9us;10us;10us;10us;10us;11us;11us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;49152us;65535us;16386us;65535us;16387us;65535us;16388us;65535us;65535us;65535us;65535us;16390us;65535us;65535us;65535us;16391us;65535us;65535us;16392us;65535us;65535us;65535us;16393us;65535us;65535us;65535us;16394us;65535us;65535us;65535us;16395us;65535us;65535us;16396us;65535us;65535us;65535us;16397us;65535us;65535us;65535us;16398us;65535us;65535us;65535us;65535us;65535us;65535us;16401us;16402us;16403us;16404us;16405us;16406us;16407us;16408us;65535us;16409us;16410us;65535us;16411us;16412us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16413us;65535us;65535us;65535us;16414us;65535us;65535us;16415us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16432us;65535us;16434us;16435us;65535us;65535us;65535us;65535us;16437us;65535us;65535us;16438us;65535us;|]
let _fsyacc_reductions = lazy [|
# 342 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  TinyML.Ast.interactive  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startinteractive));
# 351 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  TinyML.Ast.expr  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startprogram));
# 360 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "Parser.fsy"
                                                              _1 
                   )
# 47 "Parser.fsy"
                 :  TinyML.Ast.expr ));
# 371 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "Parser.fsy"
                                                               IExpr _1 
                   )
# 50 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 382 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binding in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "Parser.fsy"
                                                               IBinding _1 
                   )
# 51 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 393 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "Parser.fsy"
                                                                   _1 
                   )
# 54 "Parser.fsy"
                 : 'gentype_expr));
# 404 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atoms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                                                   Tuple _2 
                   )
# 55 "Parser.fsy"
                 : 'gentype_expr));
# 415 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Parser.fsy"
                                                                (false, _2, None, _4) 
                   )
# 59 "Parser.fsy"
                 : 'gentype_binding));
# 427 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _3 = parseState.GetInput(3) :?> 'gentype_parms in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                                                (false, _2, None, fold_params _3 _5) 
                   )
# 60 "Parser.fsy"
                 : 'gentype_binding));
# 440 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Parser.fsy"
                                                                (false, _2, Some _4, _6) 
                   )
# 62 "Parser.fsy"
                 : 'gentype_binding));
# 453 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _3 = parseState.GetInput(3) :?> 'gentype_parms in
            let _5 = parseState.GetInput(5) :?> 'gentype_ty in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Parser.fsy"
                                                                (false, _2, Some _5, fold_params _3 _7) 
                   )
# 63 "Parser.fsy"
                 : 'gentype_binding));
# 467 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                                                (true, _3, None, _5) 
                   )
# 65 "Parser.fsy"
                 : 'gentype_binding));
# 479 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_parms in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                                                (true, _3, None, fold_params _4 _6 )
                   )
# 66 "Parser.fsy"
                 : 'gentype_binding));
# 492 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_parms in
            let _6 = parseState.GetInput(6) :?> 'gentype_ty in
            let _8 = parseState.GetInput(8) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Parser.fsy"
                                                                (true, _3, Some _6, fold_params _4 _8) 
                   )
# 68 "Parser.fsy"
                 : 'gentype_binding));
# 506 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _5 = parseState.GetInput(5) :?> 'gentype_ty in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                                                (true, _3, Some _5, _7) 
                   )
# 69 "Parser.fsy"
                 : 'gentype_binding));
# 519 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Parser.fsy"
                                                         [_1, None] 
                   )
# 72 "Parser.fsy"
                 : 'gentype_parms));
# 530 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "Parser.fsy"
                                                         [_2, Some _4]
                   )
# 73 "Parser.fsy"
                 : 'gentype_parms));
# 542 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            let _2 = parseState.GetInput(2) :?> 'gentype_parms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Parser.fsy"
                                                         (_1, None) :: _2 
                   )
# 74 "Parser.fsy"
                 : 'gentype_parms));
# 554 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            let _6 = parseState.GetInput(6) :?> 'gentype_parms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                                         (_2, Some _4) :: _6
                   )
# 75 "Parser.fsy"
                 : 'gentype_parms));
# 567 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Int32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                                               Lit (LInt _1) 
                   )
# 78 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 578 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Double in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                               Lit (LFloat _1) 
                   )
# 79 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 589 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                                               Lit (LString _1) 
                   )
# 80 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 600 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "Parser.fsy"
                                                               Lit (LChar _1) 
                   )
# 81 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 611 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                                               Lit (LBool true) 
                   )
# 82 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 621 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Parser.fsy"
                                                               Lit (LBool false) 
                   )
# 83 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 631 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "Parser.fsy"
                                                               Lit LUnit 
                   )
# 84 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 641 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                               Var _1 
                   )
# 86 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 652 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Parser.fsy"
                                                               _2 
                   )
# 88 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 663 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_app_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                                       _1 
                   )
# 91 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 674 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_app_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Parser.fsy"
                                                                       App (_1, _2) 
                   )
# 92 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 686 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parms in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "Parser.fsy"
                                                                       fold_params _2 _4 
                   )
# 94 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 698 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binding in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Parser.fsy"
                                                                       LetIn (_1, _3) 
                   )
# 96 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 710 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                                                 UnOp ("not", _2) 
                   )
# 98 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 721 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                                                             UnOp ("-", _2) 
                   )
# 99 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 732 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Parser.fsy"
                                                                    BinOp (_1, "+", _3) 
                   )
# 101 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 744 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Parser.fsy"
                                                                     BinOp (_1, "-", _3) 
                   )
# 102 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 756 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Parser.fsy"
                                                                    BinOp (_1, "*", _3) 
                   )
# 103 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 768 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                                                     BinOp (_1, "/", _3) 
                   )
# 104 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 780 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Parser.fsy"
                                                                          BinOp (_1, "%", _3) 
                   )
# 105 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 792 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                                                   BinOp (_1, "=", _3) 
                   )
# 107 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 804 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Parser.fsy"
                                                                    BinOp (_1, "<>", _3) 
                   )
# 108 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 816 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                                                   BinOp (_1, "<", _3) 
                   )
# 109 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 828 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Parser.fsy"
                                                                   BinOp (_1, ">", _3) 
                   )
# 110 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 840 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                                                    BinOp (_1, "<=", _3) 
                   )
# 111 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 852 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                                                    BinOp (_1, ">=", _3) 
                   )
# 112 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 864 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                                                                   BinOp (_1, "and", _3) 
                   )
# 113 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 876 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Parser.fsy"
                                                                         BinOp (_1, "or", _3) 
                   )
# 114 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 888 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Parser.fsy"
                                                                                   IfThenElse (_2, _4, None) 
                   )
# 116 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Parser.fsy"
                                                                                   IfThenElse (_2, _4, Some _6) 
                   )
# 117 "Parser.fsy"
                 : 'gentype_expr_tuple_atom));
# 913 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Parser.fsy"
                                                                       [_1] 
                   )
# 120 "Parser.fsy"
                 : 'gentype_expr_tuple_atoms));
# 924 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atoms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Parser.fsy"
                                                                       _1 :: _3 
                   )
# 121 "Parser.fsy"
                 : 'gentype_expr_tuple_atoms));
# 936 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "Parser.fsy"
                                                               TyName _1 
                   )
# 125 "Parser.fsy"
                 : 'gentype_ty));
# 947 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "Parser.fsy"
                                                               TyArrow (_1, _3) 
                   )
# 126 "Parser.fsy"
                 : 'gentype_ty));
# 959 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "Parser.fsy"
                                                               TyTuple _1 
                   )
# 127 "Parser.fsy"
                 : 'gentype_ty));
# 970 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Parser.fsy"
                                                               _2 
                   )
# 128 "Parser.fsy"
                 : 'gentype_ty));
# 981 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "Parser.fsy"
                                                               [_1] 
                   )
# 131 "Parser.fsy"
                 : 'gentype_ty_tuple));
# 992 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "Parser.fsy"
                                                               _1 :: _3 
                   )
# 132 "Parser.fsy"
                 : 'gentype_ty_tuple));
|]
# 1005 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 38;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let interactive lexer lexbuf :  TinyML.Ast.interactive  =
    engine lexer lexbuf 0 :?> _
let program lexer lexbuf :  TinyML.Ast.expr  =
    engine lexer lexbuf 2 :?> _
