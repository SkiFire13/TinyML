// Implementation file for parser generated by fsyacc
module TinyML.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


open TinyML
open FSharp.Common.Parsing.LexYacc
open TinyML.Ast

let parse_error_rich = Some (fun ctx -> raise (ParseErrorContextException ctx))


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | IF
  | THEN
  | ELSE
  | FUN
  | ARROW
  | LET
  | REC
  | IN
  | TRUE
  | FALSE
  | BRA
  | KET
  | PLUS
  | MINUS
  | STAR
  | SLASH
  | PERCENT
  | LT
  | GT
  | LEQ
  | GEQ
  | EQ
  | NEQ
  | AND
  | OR
  | NOT
  | COLON
  | SEMICOLON2
  | COMMA
  | STRING of (System.String)
  | ID of (System.String)
  | CHAR of (System.Char)
  | FLOAT of (System.Double)
  | INT of (System.Int32)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_FUN
    | TOKEN_ARROW
    | TOKEN_LET
    | TOKEN_REC
    | TOKEN_IN
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_BRA
    | TOKEN_KET
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_SLASH
    | TOKEN_PERCENT
    | TOKEN_LT
    | TOKEN_GT
    | TOKEN_LEQ
    | TOKEN_GEQ
    | TOKEN_EQ
    | TOKEN_NEQ
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_COLON
    | TOKEN_SEMICOLON2
    | TOKEN_COMMA
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_CHAR
    | TOKEN_FLOAT
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startinteractive
    | NONTERM__startprogram
    | NONTERM_program
    | NONTERM_interactive
    | NONTERM_binding
    | NONTERM_parms
    | NONTERM_expr_app_atom
    | NONTERM_expr
    | NONTERM_expr_tuple_atoms
    | NONTERM_ty
    | NONTERM_ty_tuple

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | IF  -> 1 
  | THEN  -> 2 
  | ELSE  -> 3 
  | FUN  -> 4 
  | ARROW  -> 5 
  | LET  -> 6 
  | REC  -> 7 
  | IN  -> 8 
  | TRUE  -> 9 
  | FALSE  -> 10 
  | BRA  -> 11 
  | KET  -> 12 
  | PLUS  -> 13 
  | MINUS  -> 14 
  | STAR  -> 15 
  | SLASH  -> 16 
  | PERCENT  -> 17 
  | LT  -> 18 
  | GT  -> 19 
  | LEQ  -> 20 
  | GEQ  -> 21 
  | EQ  -> 22 
  | NEQ  -> 23 
  | AND  -> 24 
  | OR  -> 25 
  | NOT  -> 26 
  | COLON  -> 27 
  | SEMICOLON2  -> 28 
  | COMMA  -> 29 
  | STRING _ -> 30 
  | ID _ -> 31 
  | CHAR _ -> 32 
  | FLOAT _ -> 33 
  | INT _ -> 34 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_IF 
  | 2 -> TOKEN_THEN 
  | 3 -> TOKEN_ELSE 
  | 4 -> TOKEN_FUN 
  | 5 -> TOKEN_ARROW 
  | 6 -> TOKEN_LET 
  | 7 -> TOKEN_REC 
  | 8 -> TOKEN_IN 
  | 9 -> TOKEN_TRUE 
  | 10 -> TOKEN_FALSE 
  | 11 -> TOKEN_BRA 
  | 12 -> TOKEN_KET 
  | 13 -> TOKEN_PLUS 
  | 14 -> TOKEN_MINUS 
  | 15 -> TOKEN_STAR 
  | 16 -> TOKEN_SLASH 
  | 17 -> TOKEN_PERCENT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GT 
  | 20 -> TOKEN_LEQ 
  | 21 -> TOKEN_GEQ 
  | 22 -> TOKEN_EQ 
  | 23 -> TOKEN_NEQ 
  | 24 -> TOKEN_AND 
  | 25 -> TOKEN_OR 
  | 26 -> TOKEN_NOT 
  | 27 -> TOKEN_COLON 
  | 28 -> TOKEN_SEMICOLON2 
  | 29 -> TOKEN_COMMA 
  | 30 -> TOKEN_STRING 
  | 31 -> TOKEN_ID 
  | 32 -> TOKEN_CHAR 
  | 33 -> TOKEN_FLOAT 
  | 34 -> TOKEN_INT 
  | 37 -> TOKEN_end_of_input
  | 35 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startinteractive 
    | 1 -> NONTERM__startprogram 
    | 2 -> NONTERM_program 
    | 3 -> NONTERM_interactive 
    | 4 -> NONTERM_interactive 
    | 5 -> NONTERM_binding 
    | 6 -> NONTERM_binding 
    | 7 -> NONTERM_binding 
    | 8 -> NONTERM_binding 
    | 9 -> NONTERM_binding 
    | 10 -> NONTERM_binding 
    | 11 -> NONTERM_binding 
    | 12 -> NONTERM_binding 
    | 13 -> NONTERM_parms 
    | 14 -> NONTERM_parms 
    | 15 -> NONTERM_parms 
    | 16 -> NONTERM_parms 
    | 17 -> NONTERM_expr_app_atom 
    | 18 -> NONTERM_expr_app_atom 
    | 19 -> NONTERM_expr_app_atom 
    | 20 -> NONTERM_expr_app_atom 
    | 21 -> NONTERM_expr_app_atom 
    | 22 -> NONTERM_expr_app_atom 
    | 23 -> NONTERM_expr_app_atom 
    | 24 -> NONTERM_expr_app_atom 
    | 25 -> NONTERM_expr_app_atom 
    | 26 -> NONTERM_expr_app_atom 
    | 27 -> NONTERM_expr 
    | 28 -> NONTERM_expr 
    | 29 -> NONTERM_expr 
    | 30 -> NONTERM_expr 
    | 31 -> NONTERM_expr 
    | 32 -> NONTERM_expr 
    | 33 -> NONTERM_expr 
    | 34 -> NONTERM_expr 
    | 35 -> NONTERM_expr 
    | 36 -> NONTERM_expr 
    | 37 -> NONTERM_expr 
    | 38 -> NONTERM_expr 
    | 39 -> NONTERM_expr 
    | 40 -> NONTERM_expr 
    | 41 -> NONTERM_expr 
    | 42 -> NONTERM_expr 
    | 43 -> NONTERM_expr 
    | 44 -> NONTERM_expr 
    | 45 -> NONTERM_expr 
    | 46 -> NONTERM_expr 
    | 47 -> NONTERM_expr 
    | 48 -> NONTERM_expr_tuple_atoms 
    | 49 -> NONTERM_expr_tuple_atoms 
    | 50 -> NONTERM_ty 
    | 51 -> NONTERM_ty 
    | 52 -> NONTERM_ty 
    | 53 -> NONTERM_ty 
    | 54 -> NONTERM_ty_tuple 
    | 55 -> NONTERM_ty_tuple 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 37 
let _fsyacc_tagOfErrorTerminal = 35

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | FUN  -> "FUN" 
  | ARROW  -> "ARROW" 
  | LET  -> "LET" 
  | REC  -> "REC" 
  | IN  -> "IN" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | BRA  -> "BRA" 
  | KET  -> "KET" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | SLASH  -> "SLASH" 
  | PERCENT  -> "PERCENT" 
  | LT  -> "LT" 
  | GT  -> "GT" 
  | LEQ  -> "LEQ" 
  | GEQ  -> "GEQ" 
  | EQ  -> "EQ" 
  | NEQ  -> "NEQ" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | COLON  -> "COLON" 
  | SEMICOLON2  -> "SEMICOLON2" 
  | COMMA  -> "COMMA" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | CHAR _ -> "CHAR" 
  | FLOAT _ -> "FLOAT" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | BRA  -> (null : System.Object) 
  | KET  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | PERCENT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LEQ  -> (null : System.Object) 
  | GEQ  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NEQ  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SEMICOLON2  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;0us;65535us;1us;65535us;2us;3us;1us;65535us;0us;1us;32us;65535us;0us;8us;2us;87us;12us;87us;15us;87us;19us;87us;23us;87us;27us;87us;30us;87us;34us;87us;38us;87us;54us;87us;86us;87us;88us;87us;89us;87us;90us;87us;91us;87us;92us;87us;93us;87us;94us;87us;95us;87us;96us;87us;97us;87us;98us;87us;99us;87us;100us;87us;101us;87us;102us;87us;103us;87us;104us;87us;105us;87us;106us;87us;107us;87us;5us;65535us;11us;14us;26us;29us;40us;46us;45us;47us;84us;85us;64us;65535us;0us;61us;2us;61us;4us;83us;6us;83us;12us;61us;13us;83us;15us;61us;16us;83us;19us;61us;20us;83us;23us;61us;24us;83us;27us;61us;28us;83us;30us;61us;31us;83us;34us;61us;35us;83us;38us;61us;39us;83us;54us;61us;57us;83us;62us;83us;63us;83us;64us;83us;65us;83us;66us;83us;67us;83us;68us;83us;69us;83us;70us;83us;71us;83us;72us;83us;73us;83us;74us;83us;75us;83us;76us;83us;77us;83us;78us;83us;79us;83us;80us;83us;81us;83us;82us;83us;86us;61us;88us;61us;89us;61us;90us;61us;91us;61us;92us;61us;93us;61us;94us;61us;95us;61us;96us;61us;97us;61us;98us;61us;99us;61us;100us;61us;101us;61us;102us;61us;103us;61us;104us;61us;105us;61us;106us;61us;107us;61us;32us;65535us;0us;6us;2us;4us;12us;13us;15us;16us;19us;20us;23us;24us;27us;28us;30us;31us;34us;35us;38us;39us;54us;57us;86us;62us;88us;63us;89us;64us;90us;65us;91us;66us;92us;67us;93us;68us;94us;69us;95us;70us;96us;71us;97us;72us;98us;73us;99us;74us;100us;75us;101us;76us;102us;77us;103us;78us;104us;79us;105us;80us;106us;81us;107us;82us;2us;65535us;54us;59us;107us;108us;9us;65535us;17us;18us;21us;22us;32us;33us;36us;37us;43us;44us;113us;110us;114us;112us;115us;112us;118us;111us;2us;65535us;114us;116us;115us;117us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;2us;4us;6us;39us;45us;110us;143us;146us;156us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;15us;2us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;1us;2us;15us;3us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;1us;3us;2us;4us;30us;1us;4us;8us;5us;6us;7us;8us;9us;10us;11us;12us;4us;5us;6us;7us;8us;1us;5us;15us;5us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;2us;6us;8us;1us;6us;15us;6us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;1us;7us;3us;7us;51us;52us;1us;7us;15us;7us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;1us;8us;3us;8us;51us;52us;1us;8us;15us;8us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;4us;9us;10us;11us;12us;4us;9us;10us;11us;12us;1us;9us;15us;9us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;2us;10us;11us;1us;10us;15us;10us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;1us;11us;3us;11us;51us;52us;1us;11us;15us;11us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;1us;12us;3us;12us;51us;52us;1us;12us;15us;12us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;2us;13us;15us;2us;14us;16us;2us;14us;16us;2us;14us;16us;4us;14us;16us;51us;52us;2us;14us;16us;1us;15us;1us;16us;1us;17us;1us;18us;1us;19us;1us;20us;1us;21us;1us;22us;3us;23us;25us;26us;1us;23us;1us;24us;17us;25us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;48us;49us;1us;25us;1us;26us;1us;26us;1us;27us;15us;28us;29us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;30us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;31us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;32us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;33us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;33us;34us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;33us;34us;35us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;33us;34us;35us;36us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;33us;34us;35us;36us;37us;37us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;33us;34us;35us;36us;37us;38us;38us;39us;40us;41us;42us;43us;44us;45us;15us;28us;33us;34us;35us;36us;37us;38us;39us;39us;40us;41us;42us;43us;44us;45us;15us;28us;33us;34us;35us;36us;37us;38us;39us;40us;40us;41us;42us;43us;44us;45us;15us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;41us;42us;43us;44us;45us;15us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;42us;43us;44us;45us;15us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;43us;44us;45us;15us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;44us;45us;15us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;45us;16us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;16us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;15us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;47us;16us;28us;33us;34us;35us;36us;37us;38us;39us;40us;41us;42us;43us;44us;45us;48us;49us;1us;28us;1us;29us;1us;29us;1us;29us;1us;30us;1us;30us;1us;31us;1us;32us;1us;33us;1us;34us;1us;35us;1us;36us;1us;37us;1us;38us;1us;39us;1us;40us;1us;41us;1us;42us;1us;43us;1us;44us;1us;45us;2us;46us;47us;2us;46us;47us;1us;47us;1us;49us;1us;49us;1us;50us;3us;51us;51us;52us;3us;51us;52us;53us;4us;51us;52us;54us;55us;1us;51us;1us;52us;2us;52us;55us;1us;52us;2us;52us;55us;1us;53us;1us;53us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;24us;26us;42us;44us;47us;49us;58us;63us;65us;81us;84us;86us;102us;104us;108us;110us;126us;128us;132us;134us;150us;155us;160us;162us;178us;181us;183us;199us;201us;205us;207us;223us;225us;229us;231us;247us;250us;253us;256us;259us;264us;267us;269us;271us;273us;275us;277us;279us;281us;283us;287us;289us;291us;309us;311us;313us;315us;317us;333us;349us;365us;381us;397us;413us;429us;445us;461us;477us;493us;509us;525us;541us;557us;573us;589us;606us;623us;639us;656us;658us;660us;662us;664us;666us;668us;670us;672us;674us;676us;678us;680us;682us;684us;686us;688us;690us;692us;694us;696us;698us;701us;704us;706us;708us;710us;712us;716us;720us;725us;727us;729us;732us;734us;737us;739us;|]
let _fsyacc_action_rows = 120
let _fsyacc_actionTableElements = [|13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;0us;49152us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;0us;49152us;22us;32768us;0us;5us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;0us;16386us;22us;32768us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;28us;7us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;0us;16387us;2us;32768us;8us;88us;28us;9us;0us;16388us;2us;32768us;7us;25us;31us;11us;4us;32768us;11us;41us;22us;12us;27us;17us;31us;40us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16389us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;2us;32768us;22us;15us;27us;21us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16390us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;2us;32768us;11us;118us;31us;109us;3us;32768us;5us;113us;15us;114us;22us;19us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16391us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;2us;32768us;11us;118us;31us;109us;3us;32768us;5us;113us;15us;114us;22us;23us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16392us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;1us;32768us;31us;26us;4us;32768us;11us;41us;22us;27us;27us;36us;31us;40us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16393us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;2us;32768us;22us;30us;27us;32us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16394us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;2us;32768us;11us;118us;31us;109us;3us;32768us;5us;113us;15us;114us;22us;34us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16395us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;2us;32768us;11us;118us;31us;109us;3us;32768us;5us;113us;15us;114us;22us;38us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16396us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;2us;16397us;11us;41us;31us;40us;1us;32768us;31us;42us;1us;32768us;27us;43us;2us;32768us;11us;118us;31us;109us;3us;32768us;5us;113us;12us;45us;15us;114us;2us;16398us;11us;41us;31us;40us;0us;16399us;0us;16400us;0us;16401us;0us;16402us;0us;16403us;0us;16404us;0us;16405us;0us;16406us;14us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;12us;55us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;0us;16407us;0us;16408us;23us;16432us;9us;52us;10us;53us;11us;54us;12us;58us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;29us;107us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;0us;16409us;1us;32768us;12us;60us;0us;16410us;0us;16411us;21us;16413us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16414us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;9us;16415us;9us;52us;10us;53us;11us;54us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;9us;16416us;9us;52us;10us;53us;11us;54us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;11us;16417us;9us;52us;10us;53us;11us;54us;15us;93us;16us;94us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;11us;16418us;9us;52us;10us;53us;11us;54us;15us;93us;16us;94us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;9us;16419us;9us;52us;10us;53us;11us;54us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;9us;16420us;9us;52us;10us;53us;11us;54us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16421us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;16422us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;16423us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;16424us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;16425us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;16426us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;16427us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;19us;16428us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;20us;16429us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;22us;32768us;2us;105us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;22us;16430us;3us;106us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;21us;16431us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;22us;16432us;9us;52us;10us;53us;11us;54us;13us;91us;14us;92us;15us;93us;16us;94us;17us;95us;18us;98us;19us;99us;20us;100us;21us;101us;22us;96us;23us;97us;24us;102us;25us;103us;29us;107us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;0us;16412us;2us;32768us;11us;41us;31us;40us;1us;32768us;5us;86us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;1us;32768us;8us;88us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;13us;32768us;1us;104us;4us;84us;6us;10us;9us;52us;10us;53us;11us;54us;14us;90us;26us;89us;30us;50us;31us;56us;32us;51us;33us;49us;34us;48us;0us;16433us;0us;16434us;2us;16435us;5us;113us;15us;114us;3us;32768us;5us;113us;12us;119us;15us;114us;2us;16438us;5us;113us;15us;115us;2us;32768us;11us;118us;31us;109us;2us;32768us;11us;118us;31us;109us;2us;32768us;11us;118us;31us;109us;0us;16436us;0us;16436us;2us;32768us;11us;118us;31us;109us;0us;16437us;|]
let _fsyacc_actionTableRowOffsets = [|0us;14us;15us;29us;30us;53us;54us;77us;78us;81us;82us;85us;90us;104us;126us;129us;143us;165us;168us;172us;186us;208us;211us;215us;229us;251us;253us;258us;272us;294us;297us;311us;333us;336us;340us;354us;376us;379us;383us;397us;419us;422us;424us;426us;429us;433us;436us;437us;438us;439us;440us;441us;442us;443us;444us;459us;460us;461us;485us;486us;488us;489us;490us;512us;534us;544us;554us;566us;578us;588us;598us;620us;634us;648us;662us;676us;690us;704us;724us;745us;768us;791us;813us;836us;837us;840us;842us;856us;858us;872us;886us;900us;914us;928us;942us;956us;970us;984us;998us;1012us;1026us;1040us;1054us;1068us;1082us;1096us;1110us;1124us;1138us;1139us;1140us;1143us;1147us;1150us;1153us;1156us;1159us;1160us;1161us;1164us;|]
let _fsyacc_reductionSymbolCounts = [|1us;1us;2us;2us;2us;4us;5us;6us;7us;5us;6us;8us;7us;1us;5us;2us;6us;1us;1us;1us;1us;1us;1us;2us;1us;3us;3us;1us;2us;4us;3us;2us;2us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;4us;6us;1us;3us;1us;3us;3us;3us;1us;3us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;3us;3us;4us;4us;4us;4us;4us;4us;4us;4us;5us;5us;5us;5us;6us;6us;6us;6us;6us;6us;6us;6us;6us;6us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;7us;8us;8us;9us;9us;9us;9us;10us;10us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;49152us;65535us;16386us;65535us;16387us;65535us;16388us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16399us;16400us;16401us;16402us;16403us;16404us;16405us;16406us;65535us;16407us;16408us;65535us;16409us;65535us;16410us;16411us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16412us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16433us;16434us;65535us;65535us;65535us;65535us;65535us;65535us;16436us;65535us;65535us;16437us;|]
let _fsyacc_reductions = lazy [|
# 340 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  TinyML.Ast.interactive  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startinteractive));
# 349 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  TinyML.Ast.expr  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startprogram));
# 358 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "Parser.fsy"
                                                              _1 
                   )
# 47 "Parser.fsy"
                 :  TinyML.Ast.expr ));
# 369 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "Parser.fsy"
                                                               IExpr _1 
                   )
# 50 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 380 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binding in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "Parser.fsy"
                                                               IBinding _1 
                   )
# 51 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 391 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                                                (false, _2, None, _4) 
                   )
# 55 "Parser.fsy"
                 : 'gentype_binding));
# 403 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _3 = parseState.GetInput(3) :?> 'gentype_parms in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                                                (false, _2, None, fold_params _3 _5 None) 
                   )
# 56 "Parser.fsy"
                 : 'gentype_binding));
# 416 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Parser.fsy"
                                                                (false, _2, Some _4, _6) 
                   )
# 58 "Parser.fsy"
                 : 'gentype_binding));
# 429 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _3 = parseState.GetInput(3) :?> 'gentype_parms in
            let _5 = parseState.GetInput(5) :?> 'gentype_ty in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Parser.fsy"
                                                                (false, _2, None, fold_params _3 _7 (Some _5)) 
                   )
# 59 "Parser.fsy"
                 : 'gentype_binding));
# 443 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                                                (true, _3, None, _5) 
                   )
# 61 "Parser.fsy"
                 : 'gentype_binding));
# 455 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_parms in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Parser.fsy"
                                                                (true, _3, None, fold_params _4 _6 None) 
                   )
# 62 "Parser.fsy"
                 : 'gentype_binding));
# 468 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_parms in
            let _6 = parseState.GetInput(6) :?> 'gentype_ty in
            let _8 = parseState.GetInput(8) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "Parser.fsy"
                                                                (true, _3, None, fold_params _4 _8 (Some _6)) 
                   )
# 64 "Parser.fsy"
                 : 'gentype_binding));
# 482 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _5 = parseState.GetInput(5) :?> 'gentype_ty in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                                                (true, _3, Some _5, _7) 
                   )
# 65 "Parser.fsy"
                 : 'gentype_binding));
# 495 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Parser.fsy"
                                                         [_1, None] 
                   )
# 68 "Parser.fsy"
                 : 'gentype_parms));
# 506 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                                         [_2, Some _4]
                   )
# 69 "Parser.fsy"
                 : 'gentype_parms));
# 518 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            let _2 = parseState.GetInput(2) :?> 'gentype_parms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Parser.fsy"
                                                         (_1, None) :: _2 
                   )
# 70 "Parser.fsy"
                 : 'gentype_parms));
# 530 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            let _6 = parseState.GetInput(6) :?> 'gentype_parms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                                         (_2, Some _4) :: _6
                   )
# 71 "Parser.fsy"
                 : 'gentype_parms));
# 543 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Int32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "Parser.fsy"
                                                               Lit (LInt _1) 
                   )
# 74 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 554 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Double in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                                               Lit (LFloat _1) 
                   )
# 75 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 565 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "Parser.fsy"
                                                               Lit (LString _1) 
                   )
# 76 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 576 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "Parser.fsy"
                                                               Lit (LChar _1) 
                   )
# 77 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 587 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                                               Lit (LBool true) 
                   )
# 78 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 597 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                               Lit (LBool false) 
                   )
# 79 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 607 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                                               Lit LUnit 
                   )
# 80 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 617 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                                               Var _1 
                   )
# 82 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 628 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "Parser.fsy"
                                                               _2 
                   )
# 84 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 639 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atoms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Parser.fsy"
                                                               Tuple _2 
                   )
# 85 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 650 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_app_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Parser.fsy"
                                                               _1 
                   )
# 88 "Parser.fsy"
                 : 'gentype_expr));
# 661 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_app_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                                               App (_1, _2) 
                   )
# 89 "Parser.fsy"
                 : 'gentype_expr));
# 673 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parms in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                               fold_params _2 _4 None 
                   )
# 91 "Parser.fsy"
                 : 'gentype_expr));
# 685 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binding in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Parser.fsy"
                                                               LetIn (_1, _3) 
                   )
# 93 "Parser.fsy"
                 : 'gentype_expr));
# 697 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                                        UnOp ("not", _2) 
                   )
# 95 "Parser.fsy"
                 : 'gentype_expr));
# 708 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Parser.fsy"
                                                              UnOp ("-", _2) 
                   )
# 96 "Parser.fsy"
                 : 'gentype_expr));
# 719 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                                          BinOp (_1, "+", _3) 
                   )
# 98 "Parser.fsy"
                 : 'gentype_expr));
# 731 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                                           BinOp (_1, "-", _3) 
                   )
# 99 "Parser.fsy"
                 : 'gentype_expr));
# 743 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Parser.fsy"
                                                          BinOp (_1, "*", _3) 
                   )
# 100 "Parser.fsy"
                 : 'gentype_expr));
# 755 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Parser.fsy"
                                                           BinOp (_1, "/", _3) 
                   )
# 101 "Parser.fsy"
                 : 'gentype_expr));
# 767 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Parser.fsy"
                                                            BinOp (_1, "%", _3) 
                   )
# 102 "Parser.fsy"
                 : 'gentype_expr));
# 779 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                                         BinOp (_1, "=", _3) 
                   )
# 104 "Parser.fsy"
                 : 'gentype_expr));
# 791 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Parser.fsy"
                                                          BinOp (_1, "<>", _3) 
                   )
# 105 "Parser.fsy"
                 : 'gentype_expr));
# 803 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Parser.fsy"
                                                          BinOp (_1, "<", _3) 
                   )
# 106 "Parser.fsy"
                 : 'gentype_expr));
# 815 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                                          BinOp (_1, ">", _3) 
                   )
# 107 "Parser.fsy"
                 : 'gentype_expr));
# 827 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Parser.fsy"
                                                          BinOp (_1, "<=", _3) 
                   )
# 108 "Parser.fsy"
                 : 'gentype_expr));
# 839 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                                           BinOp (_1, ">=", _3) 
                   )
# 109 "Parser.fsy"
                 : 'gentype_expr));
# 851 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Parser.fsy"
                                                               BinOp (_1, "and", _3) 
                   )
# 110 "Parser.fsy"
                 : 'gentype_expr));
# 863 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                                           BinOp (_1, "or", _3) 
                   )
# 111 "Parser.fsy"
                 : 'gentype_expr));
# 875 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                                               IfThenElse (_2, _4, None) 
                   )
# 113 "Parser.fsy"
                 : 'gentype_expr));
# 887 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Parser.fsy"
                                                               IfThenElse (_2, _4, Some _6) 
                   )
# 114 "Parser.fsy"
                 : 'gentype_expr));
# 900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Parser.fsy"
                                                            [_1] 
                   )
# 117 "Parser.fsy"
                 : 'gentype_expr_tuple_atoms));
# 911 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atoms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Parser.fsy"
                                                            _1 :: _3 
                   )
# 118 "Parser.fsy"
                 : 'gentype_expr_tuple_atoms));
# 923 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "Parser.fsy"
                                                               TyName _1 
                   )
# 122 "Parser.fsy"
                 : 'gentype_ty));
# 934 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "Parser.fsy"
                                                               TyArrow (_1, _3) 
                   )
# 123 "Parser.fsy"
                 : 'gentype_ty));
# 946 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Parser.fsy"
                                                               TyTuple (_1 :: _3) 
                   )
# 124 "Parser.fsy"
                 : 'gentype_ty));
# 958 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "Parser.fsy"
                                                               _2 
                   )
# 125 "Parser.fsy"
                 : 'gentype_ty));
# 969 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Parser.fsy"
                                                               [_1] 
                   )
# 128 "Parser.fsy"
                 : 'gentype_ty_tuple));
# 980 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "Parser.fsy"
                                                               _1 :: _3 
                   )
# 129 "Parser.fsy"
                 : 'gentype_ty_tuple));
|]
# 993 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 38;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let interactive lexer lexbuf :  TinyML.Ast.interactive  =
    engine lexer lexbuf 0 :?> _
let program lexer lexbuf :  TinyML.Ast.expr  =
    engine lexer lexbuf 2 :?> _
