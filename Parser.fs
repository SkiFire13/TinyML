// Implementation file for parser generated by fsyacc
module TinyML.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


open TinyML
open FSharp.Common.Parsing.LexYacc
open TinyML.Ast

let parse_error_rich = Some (fun ctx -> raise (ParseErrorContextException ctx))


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | IF
  | THEN
  | ELSE
  | FUN
  | ARROW
  | LET
  | REC
  | IN
  | TRUE
  | FALSE
  | BRA
  | KET
  | PLUS
  | MINUS
  | STAR
  | SLASH
  | PERCENT
  | LT
  | GT
  | LEQ
  | GEQ
  | EQ
  | NEQ
  | PIPE
  | AND
  | OR
  | NOT
  | COLON
  | SEMICOLON2
  | COMMA
  | STRING of (System.String)
  | ID of (System.String)
  | CHAR of (System.Char)
  | FLOAT of (System.Double)
  | INT of (System.Int32)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_FUN
    | TOKEN_ARROW
    | TOKEN_LET
    | TOKEN_REC
    | TOKEN_IN
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_BRA
    | TOKEN_KET
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_SLASH
    | TOKEN_PERCENT
    | TOKEN_LT
    | TOKEN_GT
    | TOKEN_LEQ
    | TOKEN_GEQ
    | TOKEN_EQ
    | TOKEN_NEQ
    | TOKEN_PIPE
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_COLON
    | TOKEN_SEMICOLON2
    | TOKEN_COMMA
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_CHAR
    | TOKEN_FLOAT
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startinteractive
    | NONTERM__startprogram
    | NONTERM_program
    | NONTERM_interactive
    | NONTERM_binding
    | NONTERM_pattern
    | NONTERM_pattern_tuple
    | NONTERM_parms
    | NONTERM_expr_app_atom
    | NONTERM_expr
    | NONTERM_expr_tuple_atoms
    | NONTERM_ty
    | NONTERM_ty_tuple_atom
    | NONTERM_ty_tuple

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | IF  -> 1 
  | THEN  -> 2 
  | ELSE  -> 3 
  | FUN  -> 4 
  | ARROW  -> 5 
  | LET  -> 6 
  | REC  -> 7 
  | IN  -> 8 
  | TRUE  -> 9 
  | FALSE  -> 10 
  | BRA  -> 11 
  | KET  -> 12 
  | PLUS  -> 13 
  | MINUS  -> 14 
  | STAR  -> 15 
  | SLASH  -> 16 
  | PERCENT  -> 17 
  | LT  -> 18 
  | GT  -> 19 
  | LEQ  -> 20 
  | GEQ  -> 21 
  | EQ  -> 22 
  | NEQ  -> 23 
  | PIPE  -> 24 
  | AND  -> 25 
  | OR  -> 26 
  | NOT  -> 27 
  | COLON  -> 28 
  | SEMICOLON2  -> 29 
  | COMMA  -> 30 
  | STRING _ -> 31 
  | ID _ -> 32 
  | CHAR _ -> 33 
  | FLOAT _ -> 34 
  | INT _ -> 35 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_IF 
  | 2 -> TOKEN_THEN 
  | 3 -> TOKEN_ELSE 
  | 4 -> TOKEN_FUN 
  | 5 -> TOKEN_ARROW 
  | 6 -> TOKEN_LET 
  | 7 -> TOKEN_REC 
  | 8 -> TOKEN_IN 
  | 9 -> TOKEN_TRUE 
  | 10 -> TOKEN_FALSE 
  | 11 -> TOKEN_BRA 
  | 12 -> TOKEN_KET 
  | 13 -> TOKEN_PLUS 
  | 14 -> TOKEN_MINUS 
  | 15 -> TOKEN_STAR 
  | 16 -> TOKEN_SLASH 
  | 17 -> TOKEN_PERCENT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GT 
  | 20 -> TOKEN_LEQ 
  | 21 -> TOKEN_GEQ 
  | 22 -> TOKEN_EQ 
  | 23 -> TOKEN_NEQ 
  | 24 -> TOKEN_PIPE 
  | 25 -> TOKEN_AND 
  | 26 -> TOKEN_OR 
  | 27 -> TOKEN_NOT 
  | 28 -> TOKEN_COLON 
  | 29 -> TOKEN_SEMICOLON2 
  | 30 -> TOKEN_COMMA 
  | 31 -> TOKEN_STRING 
  | 32 -> TOKEN_ID 
  | 33 -> TOKEN_CHAR 
  | 34 -> TOKEN_FLOAT 
  | 35 -> TOKEN_INT 
  | 38 -> TOKEN_end_of_input
  | 36 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startinteractive 
    | 1 -> NONTERM__startprogram 
    | 2 -> NONTERM_program 
    | 3 -> NONTERM_interactive 
    | 4 -> NONTERM_interactive 
    | 5 -> NONTERM_binding 
    | 6 -> NONTERM_binding 
    | 7 -> NONTERM_binding 
    | 8 -> NONTERM_binding 
    | 9 -> NONTERM_binding 
    | 10 -> NONTERM_binding 
    | 11 -> NONTERM_binding 
    | 12 -> NONTERM_binding 
    | 13 -> NONTERM_pattern 
    | 14 -> NONTERM_pattern 
    | 15 -> NONTERM_pattern 
    | 16 -> NONTERM_pattern_tuple 
    | 17 -> NONTERM_pattern_tuple 
    | 18 -> NONTERM_parms 
    | 19 -> NONTERM_parms 
    | 20 -> NONTERM_parms 
    | 21 -> NONTERM_parms 
    | 22 -> NONTERM_expr_app_atom 
    | 23 -> NONTERM_expr_app_atom 
    | 24 -> NONTERM_expr_app_atom 
    | 25 -> NONTERM_expr_app_atom 
    | 26 -> NONTERM_expr_app_atom 
    | 27 -> NONTERM_expr_app_atom 
    | 28 -> NONTERM_expr_app_atom 
    | 29 -> NONTERM_expr_app_atom 
    | 30 -> NONTERM_expr_app_atom 
    | 31 -> NONTERM_expr_app_atom 
    | 32 -> NONTERM_expr 
    | 33 -> NONTERM_expr 
    | 34 -> NONTERM_expr 
    | 35 -> NONTERM_expr 
    | 36 -> NONTERM_expr 
    | 37 -> NONTERM_expr 
    | 38 -> NONTERM_expr 
    | 39 -> NONTERM_expr 
    | 40 -> NONTERM_expr 
    | 41 -> NONTERM_expr 
    | 42 -> NONTERM_expr 
    | 43 -> NONTERM_expr 
    | 44 -> NONTERM_expr 
    | 45 -> NONTERM_expr 
    | 46 -> NONTERM_expr 
    | 47 -> NONTERM_expr 
    | 48 -> NONTERM_expr 
    | 49 -> NONTERM_expr 
    | 50 -> NONTERM_expr 
    | 51 -> NONTERM_expr 
    | 52 -> NONTERM_expr 
    | 53 -> NONTERM_expr 
    | 54 -> NONTERM_expr_tuple_atoms 
    | 55 -> NONTERM_expr_tuple_atoms 
    | 56 -> NONTERM_ty 
    | 57 -> NONTERM_ty 
    | 58 -> NONTERM_ty_tuple_atom 
    | 59 -> NONTERM_ty_tuple_atom 
    | 60 -> NONTERM_ty_tuple_atom 
    | 61 -> NONTERM_ty_tuple 
    | 62 -> NONTERM_ty_tuple 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 38 
let _fsyacc_tagOfErrorTerminal = 36

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | FUN  -> "FUN" 
  | ARROW  -> "ARROW" 
  | LET  -> "LET" 
  | REC  -> "REC" 
  | IN  -> "IN" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | BRA  -> "BRA" 
  | KET  -> "KET" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | SLASH  -> "SLASH" 
  | PERCENT  -> "PERCENT" 
  | LT  -> "LT" 
  | GT  -> "GT" 
  | LEQ  -> "LEQ" 
  | GEQ  -> "GEQ" 
  | EQ  -> "EQ" 
  | NEQ  -> "NEQ" 
  | PIPE  -> "PIPE" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | COLON  -> "COLON" 
  | SEMICOLON2  -> "SEMICOLON2" 
  | COMMA  -> "COMMA" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | CHAR _ -> "CHAR" 
  | FLOAT _ -> "FLOAT" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | ARROW  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | BRA  -> (null : System.Object) 
  | KET  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | PERCENT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LEQ  -> (null : System.Object) 
  | GEQ  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NEQ  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SEMICOLON2  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;0us;65535us;1us;65535us;2us;3us;1us;65535us;0us;1us;33us;65535us;0us;8us;2us;99us;12us;99us;16us;99us;20us;99us;24us;99us;28us;99us;31us;99us;35us;99us;39us;99us;65us;99us;98us;99us;100us;99us;101us;99us;102us;99us;103us;99us;104us;99us;105us;99us;106us;99us;107us;99us;108us;99us;109us;99us;110us;99us;111us;99us;112us;99us;113us;99us;114us;99us;115us;99us;116us;99us;117us;99us;118us;99us;119us;99us;120us;99us;4us;65535us;10us;11us;42us;43us;45us;48us;49us;48us;2us;65535us;45us;46us;49us;50us;5us;65535us;14us;15us;27us;30us;51us;57us;56us;58us;96us;97us;66us;65535us;0us;72us;2us;72us;4us;95us;6us;95us;12us;72us;13us;95us;16us;72us;17us;95us;20us;72us;21us;95us;24us;72us;25us;95us;28us;72us;29us;95us;31us;72us;32us;95us;35us;72us;36us;95us;39us;72us;40us;95us;65us;72us;68us;95us;73us;95us;74us;95us;75us;95us;76us;95us;77us;95us;78us;95us;79us;95us;80us;95us;81us;95us;82us;95us;83us;95us;84us;95us;85us;95us;86us;95us;87us;95us;88us;95us;89us;95us;90us;95us;91us;95us;92us;95us;93us;95us;94us;95us;98us;72us;100us;72us;101us;72us;102us;72us;103us;72us;104us;72us;105us;72us;106us;72us;107us;72us;108us;72us;109us;72us;110us;72us;111us;72us;112us;72us;113us;72us;114us;72us;115us;72us;116us;72us;117us;72us;118us;72us;119us;72us;120us;72us;33us;65535us;0us;6us;2us;4us;12us;13us;16us;17us;20us;21us;24us;25us;28us;29us;31us;32us;35us;36us;39us;40us;65us;68us;98us;73us;100us;74us;101us;75us;102us;76us;103us;77us;104us;78us;105us;79us;106us;80us;107us;81us;108us;82us;109us;83us;110us;84us;111us;85us;112us;86us;113us;87us;114us;88us;115us;89us;116us;90us;117us;91us;118us;92us;119us;93us;120us;94us;2us;65535us;65us;70us;120us;121us;9us;65535us;18us;19us;22us;23us;33us;34us;37us;38us;54us;55us;124us;129us;125us;129us;132us;130us;133us;131us;9us;65535us;18us;122us;22us;122us;33us;122us;37us;122us;54us;122us;124us;123us;125us;123us;132us;122us;133us;122us;2us;65535us;124us;126us;125us;127us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;2us;4us;6us;40us;45us;48us;54us;121us;155us;158us;168us;178us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;16us;2us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;1us;2us;16us;3us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;1us;3us;2us;4us;35us;1us;4us;8us;5us;6us;7us;8us;9us;10us;11us;12us;2us;5us;7us;1us;5us;16us;5us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;3us;6us;8us;13us;2us;6us;8us;1us;6us;16us;6us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;1us;7us;2us;7us;59us;1us;7us;16us;7us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;1us;8us;2us;8us;59us;1us;8us;16us;8us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;4us;9us;10us;11us;12us;4us;9us;10us;11us;12us;1us;9us;16us;9us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;2us;10us;11us;1us;10us;16us;10us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;1us;11us;2us;11us;59us;1us;11us;16us;11us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;1us;12us;2us;12us;59us;1us;12us;16us;12us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;1us;13us;2us;14us;15us;2us;14us;15us;1us;14us;1us;15us;1us;15us;1us;15us;2us;16us;17us;1us;17us;1us;17us;2us;18us;20us;2us;19us;21us;2us;19us;21us;2us;19us;21us;3us;19us;21us;59us;2us;19us;21us;1us;20us;1us;21us;1us;22us;1us;23us;1us;24us;1us;25us;1us;26us;1us;27us;3us;28us;30us;31us;1us;28us;1us;29us;18us;30us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;54us;55us;1us;30us;1us;31us;1us;31us;1us;32us;16us;33us;34us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;35us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;36us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;37us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;38us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;38us;39us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;38us;39us;40us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;38us;39us;40us;41us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;38us;39us;40us;41us;42us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;38us;39us;40us;41us;42us;43us;43us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;38us;39us;40us;41us;42us;43us;44us;44us;45us;46us;47us;48us;49us;50us;51us;16us;33us;38us;39us;40us;41us;42us;43us;44us;45us;45us;46us;47us;48us;49us;50us;51us;16us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;46us;47us;48us;49us;50us;51us;16us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;47us;48us;49us;50us;51us;16us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;48us;49us;50us;51us;16us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;49us;50us;51us;16us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;50us;51us;16us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;51us;17us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;17us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;16us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;53us;17us;33us;38us;39us;40us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;54us;55us;1us;33us;1us;34us;1us;34us;1us;34us;1us;35us;1us;35us;1us;36us;1us;37us;1us;38us;1us;39us;1us;40us;1us;41us;1us;42us;1us;43us;1us;44us;1us;45us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;2us;52us;53us;2us;52us;53us;1us;53us;1us;55us;1us;55us;2us;56us;57us;4us;56us;57us;61us;62us;1us;56us;2us;56us;62us;1us;56us;2us;56us;62us;1us;58us;1us;59us;2us;59us;59us;2us;59us;60us;1us;59us;1us;60us;1us;60us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;25us;27us;44us;46us;49us;51us;60us;63us;65us;82us;86us;89us;91us;108us;110us;113us;115us;132us;134us;137us;139us;156us;161us;166us;168us;185us;188us;190us;207us;209us;212us;214us;231us;233us;236us;238us;255us;257us;260us;263us;265us;267us;269us;271us;274us;276us;278us;281us;284us;287us;290us;294us;297us;299us;301us;303us;305us;307us;309us;311us;313us;317us;319us;321us;340us;342us;344us;346us;348us;365us;382us;399us;416us;433us;450us;467us;484us;501us;518us;535us;552us;569us;586us;603us;620us;637us;654us;672us;690us;707us;725us;727us;729us;731us;733us;735us;737us;739us;741us;743us;745us;747us;749us;751us;753us;755us;757us;759us;761us;763us;765us;767us;769us;772us;775us;777us;779us;781us;784us;789us;791us;794us;796us;799us;801us;803us;806us;809us;811us;813us;|]
let _fsyacc_action_rows = 135
let _fsyacc_actionTableElements = [|13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;0us;49152us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;0us;49152us;23us;32768us;0us;5us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;0us;16386us;23us;32768us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;29us;7us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;0us;16387us;2us;32768us;8us;100us;29us;9us;0us;16388us;3us;32768us;7us;26us;11us;42us;32us;14us;2us;32768us;22us;12us;28us;18us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16389us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;2us;16397us;11us;52us;32us;51us;2us;32768us;22us;16us;28us;22us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16390us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;2us;32768us;11us;133us;32us;128us;2us;32768us;5us;132us;22us;20us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16391us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;2us;32768us;11us;133us;32us;128us;2us;32768us;5us;132us;22us;24us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16392us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;1us;32768us;32us;27us;4us;32768us;11us;52us;22us;28us;28us;37us;32us;51us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16393us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;2us;32768us;22us;31us;28us;33us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16394us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;2us;32768us;11us;133us;32us;128us;2us;32768us;5us;132us;22us;35us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16395us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;2us;32768us;11us;133us;32us;128us;2us;32768us;5us;132us;22us;39us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16396us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;0us;16397us;2us;32768us;11us;42us;32us;41us;2us;32768us;12us;44us;30us;45us;0us;16398us;2us;32768us;11us;42us;32us;41us;1us;32768us;12us;47us;0us;16399us;1us;16400us;30us;49us;2us;32768us;11us;42us;32us;41us;0us;16401us;2us;16402us;11us;52us;32us;51us;1us;32768us;32us;53us;1us;32768us;28us;54us;2us;32768us;11us;133us;32us;128us;2us;32768us;5us;132us;12us;56us;2us;16403us;11us;52us;32us;51us;0us;16404us;0us;16405us;0us;16406us;0us;16407us;0us;16408us;0us;16409us;0us;16410us;0us;16411us;14us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;12us;66us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;0us;16412us;0us;16413us;24us;16438us;9us;63us;10us;64us;11us;65us;12us;69us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;30us;120us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;0us;16414us;1us;32768us;12us;71us;0us;16415us;0us;16416us;22us;16418us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16419us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;9us;16420us;9us;63us;10us;64us;11us;65us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;9us;16421us;9us;63us;10us;64us;11us;65us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;11us;16422us;9us;63us;10us;64us;11us;65us;15us;105us;16us;106us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;11us;16423us;9us;63us;10us;64us;11us;65us;15us;105us;16us;106us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;9us;16424us;9us;63us;10us;64us;11us;65us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;9us;16425us;9us;63us;10us;64us;11us;65us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16426us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;16427us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;16428us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;16429us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;16430us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;16431us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;16432us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;19us;16433us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;20us;16434us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;21us;16435us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;23us;32768us;2us;118us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;23us;16436us;3us;119us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;22us;16437us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;23us;16438us;9us;63us;10us;64us;11us;65us;13us;103us;14us;104us;15us;105us;16us;106us;17us;107us;18us;110us;19us;111us;20us;112us;21us;113us;22us;108us;23us;109us;24us;114us;25us;115us;26us;116us;30us;120us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;0us;16417us;2us;32768us;11us;52us;32us;51us;1us;32768us;5us;98us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;1us;32768us;8us;100us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;13us;32768us;1us;117us;4us;96us;6us;10us;9us;63us;10us;64us;11us;65us;14us;102us;27us;101us;31us;61us;32us;67us;33us;62us;34us;60us;35us;59us;0us;16439us;1us;16441us;15us;124us;3us;16441us;12us;16445us;15us;125us;22us;16445us;2us;32768us;11us;133us;32us;128us;2us;32768us;11us;133us;32us;128us;0us;16440us;3us;16440us;12us;16446us;15us;16446us;22us;16446us;0us;16442us;1us;32768us;5us;132us;1us;16443us;5us;132us;2us;32768us;5us;132us;12us;134us;2us;32768us;11us;133us;32us;128us;2us;32768us;11us;133us;32us;128us;0us;16444us;|]
let _fsyacc_actionTableRowOffsets = [|0us;14us;15us;29us;30us;54us;55us;79us;80us;83us;84us;88us;91us;105us;128us;131us;134us;148us;171us;174us;177us;191us;214us;217us;220us;234us;257us;259us;264us;278us;301us;304us;318us;341us;344us;347us;361us;384us;387us;390us;404us;427us;428us;431us;434us;435us;438us;440us;441us;443us;446us;447us;450us;452us;454us;457us;460us;463us;464us;465us;466us;467us;468us;469us;470us;471us;486us;487us;488us;513us;514us;516us;517us;518us;541us;564us;574us;584us;596us;608us;618us;628us;651us;665us;679us;693us;707us;721us;735us;755us;776us;798us;822us;846us;869us;893us;894us;897us;899us;913us;915us;929us;943us;957us;971us;985us;999us;1013us;1027us;1041us;1055us;1069us;1083us;1097us;1111us;1125us;1139us;1153us;1167us;1181us;1195us;1209us;1210us;1212us;1216us;1219us;1222us;1223us;1227us;1228us;1230us;1232us;1235us;1238us;1241us;|]
let _fsyacc_reductionSymbolCounts = [|1us;1us;2us;2us;2us;4us;5us;6us;7us;5us;6us;8us;7us;1us;3us;5us;1us;3us;1us;5us;2us;6us;1us;1us;1us;1us;1us;1us;2us;1us;3us;3us;1us;2us;4us;3us;2us;2us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;4us;6us;1us;3us;3us;1us;1us;3us;3us;1us;3us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;3us;3us;4us;4us;4us;4us;4us;4us;4us;4us;5us;5us;5us;6us;6us;7us;7us;7us;7us;8us;8us;8us;8us;8us;8us;8us;8us;8us;8us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;9us;10us;10us;11us;11us;12us;12us;12us;13us;13us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;49152us;65535us;16386us;65535us;16387us;65535us;16388us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16397us;65535us;65535us;16398us;65535us;65535us;16399us;65535us;65535us;16401us;65535us;65535us;65535us;65535us;65535us;65535us;16404us;16405us;16406us;16407us;16408us;16409us;16410us;16411us;65535us;16412us;16413us;65535us;16414us;65535us;16415us;16416us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16417us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16439us;65535us;65535us;65535us;65535us;16440us;65535us;16442us;65535us;65535us;65535us;65535us;65535us;16444us;|]
let _fsyacc_reductions = lazy [|
# 356 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  TinyML.Ast.interactive  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startinteractive));
# 365 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  TinyML.Ast.expr  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startprogram));
# 374 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "Parser.fsy"
                                                              _1 
                   )
# 49 "Parser.fsy"
                 :  TinyML.Ast.expr ));
# 385 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Parser.fsy"
                                                               IExpr _1 
                   )
# 52 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 396 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binding in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "Parser.fsy"
                                                               IBinding _1 
                   )
# 53 "Parser.fsy"
                 :  TinyML.Ast.interactive ));
# 407 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "Parser.fsy"
                                                                (false, _2, None, _4) 
                   )
# 57 "Parser.fsy"
                 : 'gentype_binding));
# 419 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _3 = parseState.GetInput(3) :?> 'gentype_parms in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Parser.fsy"
                                                                (false, PVariable _2, None, fold_params _3 _5 None) 
                   )
# 58 "Parser.fsy"
                 : 'gentype_binding));
# 432 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                                                (false, _2, Some _4, _6) 
                   )
# 60 "Parser.fsy"
                 : 'gentype_binding));
# 445 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _3 = parseState.GetInput(3) :?> 'gentype_parms in
            let _5 = parseState.GetInput(5) :?> 'gentype_ty in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                                                (false, PVariable _2, None, fold_params _3 _7 (Some _5)) 
                   )
# 61 "Parser.fsy"
                 : 'gentype_binding));
# 459 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Parser.fsy"
                                                                (true, PVariable _3, None, _5) 
                   )
# 63 "Parser.fsy"
                 : 'gentype_binding));
# 471 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_parms in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "Parser.fsy"
                                                                (true, PVariable _3, None, fold_params _4 _6 None) 
                   )
# 64 "Parser.fsy"
                 : 'gentype_binding));
# 484 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_parms in
            let _6 = parseState.GetInput(6) :?> 'gentype_ty in
            let _8 = parseState.GetInput(8) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                                                (true, PVariable _3, None, fold_params _4 _8 (Some _6)) 
                   )
# 66 "Parser.fsy"
                 : 'gentype_binding));
# 498 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> System.String in
            let _5 = parseState.GetInput(5) :?> 'gentype_ty in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Parser.fsy"
                                                                (true, PVariable _3, Some _5, _7) 
                   )
# 67 "Parser.fsy"
                 : 'gentype_binding));
# 511 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Parser.fsy"
                                                                PVariable _1 
                   )
# 70 "Parser.fsy"
                 : 'gentype_pattern));
# 522 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                                                _2 
                   )
# 71 "Parser.fsy"
                 : 'gentype_pattern));
# 533 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern in
            let _4 = parseState.GetInput(4) :?> 'gentype_pattern_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Parser.fsy"
                                                                PTuple (_2 :: _4) 
                   )
# 72 "Parser.fsy"
                 : 'gentype_pattern));
# 545 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                                                [_1] 
                   )
# 75 "Parser.fsy"
                 : 'gentype_pattern_tuple));
# 556 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "Parser.fsy"
                                                                 _1 :: _3 
                   )
# 76 "Parser.fsy"
                 : 'gentype_pattern_tuple));
# 568 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                         [_1, None] 
                   )
# 79 "Parser.fsy"
                 : 'gentype_parms));
# 579 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "Parser.fsy"
                                                         [_2, Some _4]
                   )
# 80 "Parser.fsy"
                 : 'gentype_parms));
# 591 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            let _2 = parseState.GetInput(2) :?> 'gentype_parms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "Parser.fsy"
                                                         (_1, None) :: _2 
                   )
# 81 "Parser.fsy"
                 : 'gentype_parms));
# 603 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> System.String in
            let _4 = parseState.GetInput(4) :?> 'gentype_ty in
            let _6 = parseState.GetInput(6) :?> 'gentype_parms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                                         (_2, Some _4) :: _6
                   )
# 82 "Parser.fsy"
                 : 'gentype_parms));
# 616 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Int32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "Parser.fsy"
                                                               Lit (LInt _1) 
                   )
# 85 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 627 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Double in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                               Lit (LFloat _1) 
                   )
# 86 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 638 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                                               Lit (LString _1) 
                   )
# 87 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 649 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.Char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "Parser.fsy"
                                                               Lit (LChar _1) 
                   )
# 88 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 660 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                                               Lit (LBool true) 
                   )
# 89 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 670 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                                               Lit (LBool false) 
                   )
# 90 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 680 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                               Lit LUnit 
                   )
# 91 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 690 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "Parser.fsy"
                                                               Var _1 
                   )
# 93 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 701 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                                               _2 
                   )
# 95 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 712 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_tuple_atoms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "Parser.fsy"
                                                               Tuple _2 
                   )
# 96 "Parser.fsy"
                 : 'gentype_expr_app_atom));
# 723 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_app_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                                               _1 
                   )
# 99 "Parser.fsy"
                 : 'gentype_expr));
# 734 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_app_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Parser.fsy"
                                                               App (_1, _2) 
                   )
# 100 "Parser.fsy"
                 : 'gentype_expr));
# 746 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parms in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Parser.fsy"
                                                               fold_params _2 _4 None 
                   )
# 102 "Parser.fsy"
                 : 'gentype_expr));
# 758 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binding in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                                               LetIn (_1, _3) 
                   )
# 104 "Parser.fsy"
                 : 'gentype_expr));
# 770 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Parser.fsy"
                                                        UnOp ("not", _2) 
                   )
# 106 "Parser.fsy"
                 : 'gentype_expr));
# 781 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                                              UnOp ("-", _2) 
                   )
# 107 "Parser.fsy"
                 : 'gentype_expr));
# 792 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                                          BinOp (_1, "+", _3) 
                   )
# 109 "Parser.fsy"
                 : 'gentype_expr));
# 804 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Parser.fsy"
                                                           BinOp (_1, "-", _3) 
                   )
# 110 "Parser.fsy"
                 : 'gentype_expr));
# 816 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                                          BinOp (_1, "*", _3) 
                   )
# 111 "Parser.fsy"
                 : 'gentype_expr));
# 828 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                                           BinOp (_1, "/", _3) 
                   )
# 112 "Parser.fsy"
                 : 'gentype_expr));
# 840 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                                            BinOp (_1, "%", _3) 
                   )
# 113 "Parser.fsy"
                 : 'gentype_expr));
# 852 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "Parser.fsy"
                                                         BinOp (_1, "=", _3) 
                   )
# 115 "Parser.fsy"
                 : 'gentype_expr));
# 864 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Parser.fsy"
                                                          BinOp (_1, "<>", _3) 
                   )
# 116 "Parser.fsy"
                 : 'gentype_expr));
# 876 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Parser.fsy"
                                                          BinOp (_1, "<", _3) 
                   )
# 117 "Parser.fsy"
                 : 'gentype_expr));
# 888 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Parser.fsy"
                                                          BinOp (_1, ">", _3) 
                   )
# 118 "Parser.fsy"
                 : 'gentype_expr));
# 900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "Parser.fsy"
                                                          BinOp (_1, "<=", _3) 
                   )
# 119 "Parser.fsy"
                 : 'gentype_expr));
# 912 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Parser.fsy"
                                                           BinOp (_1, ">=", _3) 
                   )
# 120 "Parser.fsy"
                 : 'gentype_expr));
# 924 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "Parser.fsy"
                                                           BinOp (_1, "|>", _3) 
                   )
# 122 "Parser.fsy"
                 : 'gentype_expr));
# 936 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "Parser.fsy"
                                                               BinOp (_1, "and", _3) 
                   )
# 124 "Parser.fsy"
                 : 'gentype_expr));
# 948 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "Parser.fsy"
                                                           BinOp (_1, "or", _3) 
                   )
# 125 "Parser.fsy"
                 : 'gentype_expr));
# 960 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "Parser.fsy"
                                                               IfThenElse (_2, _4, None) 
                   )
# 127 "Parser.fsy"
                 : 'gentype_expr));
# 972 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Parser.fsy"
                                                               IfThenElse (_2, _4, Some _6) 
                   )
# 128 "Parser.fsy"
                 : 'gentype_expr));
# 985 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "Parser.fsy"
                                                            [_1] 
                   )
# 131 "Parser.fsy"
                 : 'gentype_expr_tuple_atoms));
# 996 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_tuple_atoms in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "Parser.fsy"
                                                            _1 :: _3 
                   )
# 132 "Parser.fsy"
                 : 'gentype_expr_tuple_atoms));
# 1008 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "Parser.fsy"
                                                               TyTuple (_1 :: _3) 
                   )
# 136 "Parser.fsy"
                 : 'gentype_ty));
# 1020 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "Parser.fsy"
                                                               _1 
                   )
# 137 "Parser.fsy"
                 : 'gentype_ty));
# 1031 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> System.String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "Parser.fsy"
                                                               TyName _1 
                   )
# 140 "Parser.fsy"
                 : 'gentype_ty_tuple_atom));
# 1042 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "Parser.fsy"
                                                               TyArrow (_1, _3) 
                   )
# 141 "Parser.fsy"
                 : 'gentype_ty_tuple_atom));
# 1054 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "Parser.fsy"
                                                               _2 
                   )
# 142 "Parser.fsy"
                 : 'gentype_ty_tuple_atom));
# 1065 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty_tuple_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "Parser.fsy"
                                                               [_1] 
                   )
# 145 "Parser.fsy"
                 : 'gentype_ty_tuple));
# 1076 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ty_tuple_atom in
            let _3 = parseState.GetInput(3) :?> 'gentype_ty_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "Parser.fsy"
                                                               _1 :: _3 
                   )
# 146 "Parser.fsy"
                 : 'gentype_ty_tuple));
|]
# 1089 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 39;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let interactive lexer lexbuf :  TinyML.Ast.interactive  =
    engine lexer lexbuf 0 :?> _
let program lexer lexbuf :  TinyML.Ast.expr  =
    engine lexer lexbuf 2 :?> _
